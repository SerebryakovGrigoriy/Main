program FullProj;

uses
  Spring.Container,
  Spring.Persistence.Core.Interfaces,
  Vcl.Forms,
  Main in '..\..\Implementation\Lib\Forms\Main.pas' {MainForm},
  Tree in '..\..\Implementation\Lib\Forms\Tree.pas' {FormTree},
  CustomInterfaces in '..\..\Implementation\Interfaces\CustomInterfaces.pas';

{$R *.res}

var
container: TContainer;

begin
  container := GlobalContainer;

  container.RegisterType<ITreeFormInterface, TFormTree>.DelegateTo(
  function: TFormTree
  begin
      result := TFormTree.Create(nil);
      //result.Parent:=application.MainForm;//memory leak
  end);

  container.RegisterType<TMainForm, TMainForm>.DelegateTo(
  function: TMainForm
  begin
      Application.CreateForm(TMainForm, Result);
  end);
  container.Build;
  Application.Initialize;
  Application.MainFormOnTaskbar := True;
  MainForm:= GlobalContainer.Resolve<TMainForm>;
  try
    MainForm.SecondaryForm := Globalcontainer.Resolve<ITreeFormInterface>;
  except

  end;
  Application.Run;

  ReportMemoryLeaksOnShutdown := True;

end.
